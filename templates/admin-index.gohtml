{{ define "admin-index" }}
    {{ template "header" .}}
    {{ template "sidebar" .}}
    {{ template "top" .}}

    <style>
        .white-bg {
            margin: 0;
            padding: 10px;
            border-radius: 3px;
            width: 100%;
            background-color: white;
        }

        .ecommerce-widget ul {
            margin: 0;
        }

        .h1, h2, h3, p {
            font-family: 'Circular Std Book', sans-serif;
        }

        a {
            color: #0a3c93;
        }

        .ecommerce-widget.offset {
            margin-bottom: 30px;
        }

        span.lang {
            color: black;
            font-size: 16px;
        }

        p.lang {
            margin-bottom: 0;
        }
    </style>
    <div class="dashboard-ecommerce">
        <div class="container-fluid dashboard-content ">
            <div class="ecommerce-widget white-bg offset">
                <h3>Добро пожаловать</h3>

                <p>Тут вы можете добавлять и редактировать сайт
                    <a href="//bp.company" target="_blank">bp.company</a>
                </p>
            </div>

            {{/*            <div class="ecommerce-widget white-bg offset">*/}}
            {{/*                <h3>Языки</h3>*/}}

            {{/*                <p class="lang">Уже есть</p>*/}}
            {{/*                {{ with .Languages}}*/}}
            {{/*                    {{ range . }}*/}}
            {{/*                        <span class="lang">{{ . }}</span>*/}}
            {{/*                    {{ end }}*/}}
            {{/*                {{ end }}*/}}

            {{/*                <br/><br/>*/}}

            {{/*                <p class="lang">Добавить новый/Удалить</p>*/}}
            {{/*                <form class="lang-edit" action="#">*/}}
            {{/*                    <input type="text" name="name"/>*/}}
            {{/*                    <input type="button" value="add" class="add-lang">*/}}
            {{/*                    <input type="button" value="del" class="del-lang">*/}}
            {{/*                </form>*/}}
            {{/*            </div>*/}}

            {{/*            <div class="ecommerce-widget white-bg offset">*/}}
            {{/*                <h3>Файл локализации</h3>*/}}
            {{/*                <p><a href="/admin/api/localization" download="localization.yaml">Скачать текущий</a></p><br/>*/}}
            {{/*                <p>Загрузить новый</p>*/}}
            {{/*                <form id="localization-config-file-form" action="/tw-admin/api/localization" method="post">*/}}
            {{/*                    <input type="file" id="localization-config-file"/>*/}}
            {{/*                    <input type="submit" value="Upload">*/}}
            {{/*                    <input type="hidden" id="localization-config-file-value" name="config">*/}}
            {{/*                </form>*/}}
            {{/*            </div>*/}}

            <div class="ecommerce-widget white-bg offset">
                <h3>Upload files in "/"</h3>
                <p>Files already in:</p>
                <ul>
                    {{/*                    {{ with .Files}}*/}}
                    {{/*                        {{ range . }}*/}}
                    {{/*                            <li>{{.}} <a href="javascript:void(0);" style="color: red"*/}}
                    {{/*                                         onclick="deleteFile('{{.}}')">del</a></li>*/}}
                    {{/*                        {{ end }}*/}}
                    {{/*                    {{ end }}*/}}
                </ul>
                <br>
                <p>Upload new</p>
                <form id="files-file-form" action="/admin/api/files" method="post">
                    <input type="file" id="files-file"/>
                    <input type="submit" value="Upload">
                    <input type="hidden" id="files-file-value" name="value">
                    <input type="hidden" id="files-file-name" name="name">
                </form>
            </div>

            {{ if .AllowUserAdd }}
                <div class="ecommerce-widget white-bg">
                    <h3>Добавить пользователя</h3>

                    <p>Not implemented yet</p>
                </div>
            {{ end }}
        </div>
    </div>
    {{ template "bottom" .}}
    {{ template "footer" .}}

    <script type="text/javascript">
        $(function () {
            $('.add-lang').click(function () {
                var $form = $('.lang-edit');
                $.ajax({
                    type: 'POST',
                    url: "/admin/api/language",
                    data: $form.serialize(),
                    success: function () {
                        alert("New language successfully saved.");

                        location.reload();
                    },
                    error: function (err) {
                        resp = $.parseJSON(err.responseText);

                        alert(resp.error);
                    }
                });
            });

            $('.del-lang').click(function () {
                if (!confirm("Do you really want to delete this language?")) {
                    return
                }

                var $form = $('.lang-edit');
                $.ajax({
                    type: 'DELETE',
                    url: "/admin/api/language",
                    data: $form.serialize(),
                    success: function () {
                        alert("Language successfully deleted.");

                        location.reload();
                    },
                    error: function (err) {
                        resp = $.parseJSON(err.responseText);

                        alert(resp.error);
                    }
                });
            });
        });
    </script>

    <script>
        $(function () {
            $('#localization-config-file-form').submit(function (e) {
                var $form = $(this);
                $.ajax({
                    type: $form.attr('method'),
                    url: $form.attr('action'),
                    data: $form.serialize(),
                    success: function () {
                        alert("New localization file successfully saved.");

                        location.reload();
                    },
                    error: function (err) {
                        resp = $.parseJSON(err.responseText);

                        alert(resp.error);
                    }
                });

                e.preventDefault();
            });
        });

        $('#localization-config-file').on('change', function () {
            input = $(this);
            files = input.prop('files');

            var reader = new FileReader();
            reader.onload = function (e) {
                $('#localization-config-file-value').val(reader.result)
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };

            reader.readAsDataURL(files[0]);
        });
    </script>

    <script>
        $(function () {
            $('#files-file-form').submit(function (e) {
                var $form = $(this);
                $.ajax({
                    type: $form.attr('method'),
                    url: $form.attr('action'),
                    data: $form.serialize(),
                    success: function () {
                        alert("New file successfully uploaded.");

                        location.reload();
                    },
                    error: function (err) {
                        resp = $.parseJSON(err.responseText);

                        alert(resp.error);
                    }
                });

                e.preventDefault();
            });
        });

        $('#files-file').on('change', function () {
            input = $(this);
            files = input.prop('files');

            var reader = new FileReader();
            reader.onload = function (e) {
                $('#files-file-value').val(reader.result);
                $('#files-file-name').val(files[0].name);
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };

            reader.readAsDataURL(files[0]);
        });

        function deleteFile(filename) {
            if (!confirm("Do you really want to delete this file?")) {
                return
            }

            $.ajax({
                type: 'DELETE',
                url: "/admin/api/files",
                data: "filename=" + encodeURIComponent(filename),
                success: function () {
                    alert("File successfully deleted.");

                    location.reload();
                },
                error: function (err) {
                    resp = $.parseJSON(err.responseText);

                    alert(resp.error);
                }
            });
        }
    </script>
{{ end }}